{"abi":[{"type":"function","name":"createSurvey","inputs":[{"name":"params","type":"tuple","internalType":"struct SurveyParams","components":[{"name":"surveyPrompt","type":"string","internalType":"string"},{"name":"surveyType","type":"uint8","internalType":"enum SurveyType"},{"name":"isWhitelisted","type":"bool","internalType":"bool"},{"name":"whitelistRootHash","type":"bytes32","internalType":"bytes32"},{"name":"surveyEndTime","type":"uint256","internalType":"uint256"},{"name":"minResponseThreshold","type":"uint256","internalType":"uint256"},{"name":"metadataTypes","type":"uint8[]","internalType":"enum MetadataType[]"},{"name":"constraints","type":"tuple[][]","internalType":"struct Filter[][]","components":[{"name":"verifier","type":"uint8","internalType":"enum FilterOperator"},{"name":"value","type":"bytes","internalType":"bytes"}]}]}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"hasVoted","inputs":[{"name":"surveyId","type":"uint256","internalType":"uint256"},{"name":"user","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"revealResults","inputs":[{"name":"surveyId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitEntry","inputs":[{"name":"surveyId","type":"uint256","internalType":"uint256"},{"name":"eInputVote","type":"bytes32","internalType":"einput"},{"name":"metadata","type":"bytes32[]","internalType":"einput[]"},{"name":"inputProof","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"submitWhitelistedEntry","inputs":[{"name":"surveyId","type":"uint256","internalType":"uint256"},{"name":"eInputVote","type":"bytes32","internalType":"einput"},{"name":"metadata","type":"bytes32[]","internalType":"einput[]"},{"name":"inputProof","type":"bytes","internalType":"bytes"},{"name":"whitelistProof","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"surveyData","inputs":[{"name":"surveyId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct SurveyData","components":[{"name":"currentParticipants","type":"uint256","internalType":"uint256"},{"name":"encryptedResponses","type":"uint256","internalType":"euint256"},{"name":"finalResult","type":"uint256","internalType":"uint256"},{"name":"isCompleted","type":"bool","internalType":"bool"},{"name":"isValid","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"surveyParams","inputs":[{"name":"surveyId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"tuple","internalType":"struct SurveyParams","components":[{"name":"surveyPrompt","type":"string","internalType":"string"},{"name":"surveyType","type":"uint8","internalType":"enum SurveyType"},{"name":"isWhitelisted","type":"bool","internalType":"bool"},{"name":"whitelistRootHash","type":"bytes32","internalType":"bytes32"},{"name":"surveyEndTime","type":"uint256","internalType":"uint256"},{"name":"minResponseThreshold","type":"uint256","internalType":"uint256"},{"name":"metadataTypes","type":"uint8[]","internalType":"enum MetadataType[]"},{"name":"constraints","type":"tuple[][]","internalType":"struct Filter[][]","components":[{"name":"verifier","type":"uint8","internalType":"enum FilterOperator"},{"name":"value","type":"bytes","internalType":"bytes"}]}]}],"stateMutability":"view"},{"type":"event","name":"ConfirmUserEntry","inputs":[{"name":"surveyId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"user","type":"address","indexed":true,"internalType":"address"},{"name":"isValid","type":"bool","indexed":false,"internalType":"bool"}],"anonymous":false},{"type":"event","name":"EntrySubmitted","inputs":[{"name":"surveyId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"user","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"SurveyCompleted","inputs":[{"name":"surveyId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"isValid","type":"bool","indexed":false,"internalType":"bool"},{"name":"surveyType","type":"uint8","indexed":false,"internalType":"enum SurveyType"},{"name":"numberOfVotes","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"response","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SurveyCreated","inputs":[{"name":"surveyId","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"organizer","type":"address","indexed":false,"internalType":"address"},{"name":"surveyType","type":"uint8","indexed":false,"internalType":"enum SurveyType"},{"name":"surveyPrompt","type":"string","indexed":false,"internalType":"string"}],"anonymous":false},{"type":"error","name":"FinishedSurvey","inputs":[]},{"type":"error","name":"InvalidMerkleProof","inputs":[]},{"type":"error","name":"InvalidSurveyId","inputs":[]},{"type":"error","name":"InvalidSurveyParameter","inputs":[{"name":"field","type":"string","internalType":"string"}]},{"type":"error","name":"InvalidUserMetadata","inputs":[]},{"type":"error","name":"ResultAlreadyReveal","inputs":[]},{"type":"error","name":"UnfinishedSurvey","inputs":[]},{"type":"error","name":"UserAlreadyVoted","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"createSurvey((string,uint8,bool,bytes32,uint256,uint256,uint8[],(uint8,bytes)[][]))":"dfa69f92","hasVoted(uint256,address)":"43859632","revealResults(uint256)":"b8f6255a","submitEntry(uint256,bytes32,bytes32[],bytes)":"33ce9e29","submitWhitelistedEntry(uint256,bytes32,bytes32[],bytes,bytes32[])":"21acc8ea","surveyData(uint256)":"00bcd6d5","surveyParams(uint256)":"d7b8f1cb"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FinishedSurvey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMerkleProof\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSurveyId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"field\",\"type\":\"string\"}],\"name\":\"InvalidSurveyParameter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidUserMetadata\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ResultAlreadyReveal\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnfinishedSurvey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyVoted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"name\":\"ConfirmUserEntry\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"EntrySubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"enum SurveyType\",\"name\":\"surveyType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numberOfVotes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"response\",\"type\":\"uint256\"}],\"name\":\"SurveyCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum SurveyType\",\"name\":\"surveyType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"surveyPrompt\",\"type\":\"string\"}],\"name\":\"SurveyCreated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"surveyPrompt\",\"type\":\"string\"},{\"internalType\":\"enum SurveyType\",\"name\":\"surveyType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistRootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"surveyEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minResponseThreshold\",\"type\":\"uint256\"},{\"internalType\":\"enum MetadataType[]\",\"name\":\"metadataTypes\",\"type\":\"uint8[]\"},{\"components\":[{\"internalType\":\"enum FilterOperator\",\"name\":\"verifier\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct Filter[][]\",\"name\":\"constraints\",\"type\":\"tuple[][]\"}],\"internalType\":\"struct SurveyParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"createSurvey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"}],\"name\":\"revealResults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"},{\"internalType\":\"einput\",\"name\":\"eInputVote\",\"type\":\"bytes32\"},{\"internalType\":\"einput[]\",\"name\":\"metadata\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"inputProof\",\"type\":\"bytes\"}],\"name\":\"submitEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"},{\"internalType\":\"einput\",\"name\":\"eInputVote\",\"type\":\"bytes32\"},{\"internalType\":\"einput[]\",\"name\":\"metadata\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"inputProof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"whitelistProof\",\"type\":\"bytes32[]\"}],\"name\":\"submitWhitelistedEntry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"}],\"name\":\"surveyData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"currentParticipants\",\"type\":\"uint256\"},{\"internalType\":\"euint256\",\"name\":\"encryptedResponses\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalResult\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isCompleted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"struct SurveyData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"surveyId\",\"type\":\"uint256\"}],\"name\":\"surveyParams\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"surveyPrompt\",\"type\":\"string\"},{\"internalType\":\"enum SurveyType\",\"name\":\"surveyType\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"whitelistRootHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"surveyEndTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minResponseThreshold\",\"type\":\"uint256\"},{\"internalType\":\"enum MetadataType[]\",\"name\":\"metadataTypes\",\"type\":\"uint8[]\"},{\"components\":[{\"internalType\":\"enum FilterOperator\",\"name\":\"verifier\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"internalType\":\"struct Filter[][]\",\"name\":\"constraints\",\"type\":\"tuple[][]\"}],\"internalType\":\"struct SurveyParams\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSurvey((string,uint8,bool,bytes32,uint256,uint256,uint8[],(uint8,bytes)[][]))\":{\"params\":{\"params\":\"Parameter of the Survey.\"},\"returns\":{\"_0\":\"surveyId The id of the survey created.\"}},\"hasVoted(uint256,address)\":{\"details\":\"Notice that it doesn't matter whether the entry is considered valid or not.\",\"params\":{\"surveyId\":\"Id of the survey.\",\"user\":\"Address of the user.\"},\"returns\":{\"_0\":\"hasVoted Returns true if the user has submitted an entry to a survey.\"}},\"revealResults(uint256)\":{\"custom:requirements\":\"- The survey should be finished, meaning we reach the end of the submission time.\",\"details\":\"When revealing the result of the survey, we need to ensure that we have reach the threshold number of participants, to avoid any leak in the vote. When the threshold is reached, we can rely on the Zama Gateway mechanism to decypher the vote.\",\"params\":{\"surveyId\":\"ID of the survey.\"}},\"submitEntry(uint256,bytes32,bytes32[],bytes)\":{\"custom:requirements\":\"- User has not already voted - The survey should still be active. - The input metadata lenght should match the survey one.\",\"params\":{\"eInputVote\":\"Encrypted entry of the user.\",\"inputProof\":\"Cryptographic proof verifying the validity of the encrypted inputs.\",\"metadata\":\"Associated metadata of the user.\",\"surveyId\":\"ID of the survey.\"}},\"submitWhitelistedEntry(uint256,bytes32,bytes32[],bytes,bytes32[])\":{\"custom:requirements\":\"- User should be whitelisted and the merkle proof should be validated. - User has not already voted - The survey should still be active. - The input metadata lenght should match the survey one.\",\"params\":{\"eInputVote\":\"Encrypted entry of the user.\",\"inputProof\":\"Cryptographic proof verifying the validity of the encrypted inputs.\",\"metadata\":\"Associated metadata of the user.\",\"surveyId\":\"ID of the survey.\",\"whitelistProof\":\"Merkle proof path to validate to confirm whitelisted user.\"}},\"surveyData(uint256)\":{\"details\":\"It represents the current survey state.\",\"returns\":{\"_0\":\"SurveyData The survey's data.\"}},\"surveyParams(uint256)\":{\"details\":\"This represents the parameter of the survey defined by the organizer.\",\"returns\":{\"_0\":\"SurveyParams The survey parameter.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSurvey((string,uint8,bool,bytes32,uint256,uint256,uint8[],(uint8,bytes)[][]))\":{\"notice\":\"Create a new survey.\"},\"hasVoted(uint256,address)\":{\"notice\":\"Indicates if a user has submitted an entry for a given survey.\"},\"revealResults(uint256)\":{\"notice\":\"Reveal the survey result.\"},\"submitEntry(uint256,bytes32,bytes32[],bytes)\":{\"notice\":\"Submit a new entry for a polling/benchmark survey.\"},\"submitWhitelistedEntry(uint256,bytes32,bytes32[],bytes,bytes32[])\":{\"notice\":\"Submit a new entry for a whitelisted polling/benchmark survey.\"},\"surveyData(uint256)\":{\"notice\":\"Returns the survey's data.\"},\"surveyParams(uint256)\":{\"notice\":\"Returns the survey's parameter.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISurvey.sol\":\"ISurvey\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":fhevm-contracts/=node_modules/fhevm-contracts/\",\":fhevm-core-contracts/=node_modules/fhevm-core-contracts/\",\":fhevm/=node_modules/fhevm/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IFilters.sol\":{\"keccak256\":\"0x00d7159267574701b0eb6e61f97fbff2ce60650ba67d4d801f8e2303d99ac39e\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://c0597fd5d67833f95d312641ae970465e1ba4d05c7373047cb719637e592f76a\",\"dweb:/ipfs/QmUzDBv8L4GooFzj9dMdHxNUT9DBEn69MELgMGFhMfwzCA\"]},\"contracts/interfaces/ISurvey.sol\":{\"keccak256\":\"0xd4ba043feb66e28d5fe8eed2f957651cca2d068fe5ce79f5b0a75b6ca122297f\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://a02911369c8a0fde02a4457a003c6686864759e3c6c43034601af4801ee1526f\",\"dweb:/ipfs/QmUE1Mof9PN3JrZzYrHYeYpgJHLzWswd9cGcyajeFsKXBj\"]},\"node_modules/fhevm/gateway/GatewayCaller.sol\":{\"keccak256\":\"0xd19fd7715f0c5b479bf0cd8e3108cc8da7deae2d4fc7fb5ab089ebf2d76a0652\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://6386c509464cefe5a41903ca837da46a21b8042d13ccde656158efc48cd70ea8\",\"dweb:/ipfs/QmUn7C6aZwKmEmKsphBshBezXXGZtLMyfaeZAyuZoRsBWU\"]},\"node_modules/fhevm/gateway/lib/Gateway.sol\":{\"keccak256\":\"0x9585a649e3001a4b8768ab6e2597b416f680bcc537309cd50b60e023e9791318\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://a1b055bfb067cc247d4bd60b5f8348f667cbe79717a5753cd6412955277345d0\",\"dweb:/ipfs/QmTveBaQg9GUdtrrxcR4RsiyAEmoEKGL4gn6E1gThR1ph5\"]},\"node_modules/fhevm/lib/Impl.sol\":{\"keccak256\":\"0x89d4968cd956a8931f1a8a177b3bef1c6cf88a03665083db74430add50b88f21\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://aaaef2c82d56dacfb08946842ea1ce26757d13f3251de62fa79222232dfcb43c\",\"dweb:/ipfs/QmQ6QZPxJw9jb3qjRYCX7pMQVoYogjTsYgmdEnB3EnwFRy\"]},\"node_modules/fhevm/lib/TFHE.sol\":{\"keccak256\":\"0x221799c8332f83ab65a0b71746409f0c2c89f1cd8d9ba4091d967c667e1df734\",\"license\":\"BSD-3-Clause-Clear\",\"urls\":[\"bzz-raw://2dba387fbc612a2ee64063b0ee6c27304b3944423d11045acc50abd84577fb5f\",\"dweb:/ipfs/QmThptDGnpd8PuncFk1rnQoCzEqwUED622yC9xZgFhwY59\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"FinishedSurvey"},{"inputs":[],"type":"error","name":"InvalidMerkleProof"},{"inputs":[],"type":"error","name":"InvalidSurveyId"},{"inputs":[{"internalType":"string","name":"field","type":"string"}],"type":"error","name":"InvalidSurveyParameter"},{"inputs":[],"type":"error","name":"InvalidUserMetadata"},{"inputs":[],"type":"error","name":"ResultAlreadyReveal"},{"inputs":[],"type":"error","name":"UnfinishedSurvey"},{"inputs":[],"type":"error","name":"UserAlreadyVoted"},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256","indexed":true},{"internalType":"address","name":"user","type":"address","indexed":true},{"internalType":"bool","name":"isValid","type":"bool","indexed":false}],"type":"event","name":"ConfirmUserEntry","anonymous":false},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256","indexed":true},{"internalType":"address","name":"user","type":"address","indexed":false}],"type":"event","name":"EntrySubmitted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256","indexed":true},{"internalType":"bool","name":"isValid","type":"bool","indexed":false},{"internalType":"enum SurveyType","name":"surveyType","type":"uint8","indexed":false},{"internalType":"uint256","name":"numberOfVotes","type":"uint256","indexed":false},{"internalType":"uint256","name":"response","type":"uint256","indexed":false}],"type":"event","name":"SurveyCompleted","anonymous":false},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256","indexed":true},{"internalType":"address","name":"organizer","type":"address","indexed":false},{"internalType":"enum SurveyType","name":"surveyType","type":"uint8","indexed":false},{"internalType":"string","name":"surveyPrompt","type":"string","indexed":false}],"type":"event","name":"SurveyCreated","anonymous":false},{"inputs":[{"internalType":"struct SurveyParams","name":"params","type":"tuple","components":[{"internalType":"string","name":"surveyPrompt","type":"string"},{"internalType":"enum SurveyType","name":"surveyType","type":"uint8"},{"internalType":"bool","name":"isWhitelisted","type":"bool"},{"internalType":"bytes32","name":"whitelistRootHash","type":"bytes32"},{"internalType":"uint256","name":"surveyEndTime","type":"uint256"},{"internalType":"uint256","name":"minResponseThreshold","type":"uint256"},{"internalType":"enum MetadataType[]","name":"metadataTypes","type":"uint8[]"},{"internalType":"struct Filter[][]","name":"constraints","type":"tuple[][]","components":[{"internalType":"enum FilterOperator","name":"verifier","type":"uint8"},{"internalType":"bytes","name":"value","type":"bytes"}]}]}],"stateMutability":"nonpayable","type":"function","name":"createSurvey","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"stateMutability":"view","type":"function","name":"hasVoted","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revealResults"},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256"},{"internalType":"einput","name":"eInputVote","type":"bytes32"},{"internalType":"einput[]","name":"metadata","type":"bytes32[]"},{"internalType":"bytes","name":"inputProof","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"submitEntry"},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256"},{"internalType":"einput","name":"eInputVote","type":"bytes32"},{"internalType":"einput[]","name":"metadata","type":"bytes32[]"},{"internalType":"bytes","name":"inputProof","type":"bytes"},{"internalType":"bytes32[]","name":"whitelistProof","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"submitWhitelistedEntry"},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256"}],"stateMutability":"view","type":"function","name":"surveyData","outputs":[{"internalType":"struct SurveyData","name":"","type":"tuple","components":[{"internalType":"uint256","name":"currentParticipants","type":"uint256"},{"internalType":"euint256","name":"encryptedResponses","type":"uint256"},{"internalType":"uint256","name":"finalResult","type":"uint256"},{"internalType":"bool","name":"isCompleted","type":"bool"},{"internalType":"bool","name":"isValid","type":"bool"}]}]},{"inputs":[{"internalType":"uint256","name":"surveyId","type":"uint256"}],"stateMutability":"view","type":"function","name":"surveyParams","outputs":[{"internalType":"struct SurveyParams","name":"","type":"tuple","components":[{"internalType":"string","name":"surveyPrompt","type":"string"},{"internalType":"enum SurveyType","name":"surveyType","type":"uint8"},{"internalType":"bool","name":"isWhitelisted","type":"bool"},{"internalType":"bytes32","name":"whitelistRootHash","type":"bytes32"},{"internalType":"uint256","name":"surveyEndTime","type":"uint256"},{"internalType":"uint256","name":"minResponseThreshold","type":"uint256"},{"internalType":"enum MetadataType[]","name":"metadataTypes","type":"uint8[]"},{"internalType":"struct Filter[][]","name":"constraints","type":"tuple[][]","components":[{"internalType":"enum FilterOperator","name":"verifier","type":"uint8"},{"internalType":"bytes","name":"value","type":"bytes"}]}]}]}],"devdoc":{"kind":"dev","methods":{"createSurvey((string,uint8,bool,bytes32,uint256,uint256,uint8[],(uint8,bytes)[][]))":{"params":{"params":"Parameter of the Survey."},"returns":{"_0":"surveyId The id of the survey created."}},"hasVoted(uint256,address)":{"details":"Notice that it doesn't matter whether the entry is considered valid or not.","params":{"surveyId":"Id of the survey.","user":"Address of the user."},"returns":{"_0":"hasVoted Returns true if the user has submitted an entry to a survey."}},"revealResults(uint256)":{"custom:requirements":"- The survey should be finished, meaning we reach the end of the submission time.","details":"When revealing the result of the survey, we need to ensure that we have reach the threshold number of participants, to avoid any leak in the vote. When the threshold is reached, we can rely on the Zama Gateway mechanism to decypher the vote.","params":{"surveyId":"ID of the survey."}},"submitEntry(uint256,bytes32,bytes32[],bytes)":{"custom:requirements":"- User has not already voted - The survey should still be active. - The input metadata lenght should match the survey one.","params":{"eInputVote":"Encrypted entry of the user.","inputProof":"Cryptographic proof verifying the validity of the encrypted inputs.","metadata":"Associated metadata of the user.","surveyId":"ID of the survey."}},"submitWhitelistedEntry(uint256,bytes32,bytes32[],bytes,bytes32[])":{"custom:requirements":"- User should be whitelisted and the merkle proof should be validated. - User has not already voted - The survey should still be active. - The input metadata lenght should match the survey one.","params":{"eInputVote":"Encrypted entry of the user.","inputProof":"Cryptographic proof verifying the validity of the encrypted inputs.","metadata":"Associated metadata of the user.","surveyId":"ID of the survey.","whitelistProof":"Merkle proof path to validate to confirm whitelisted user."}},"surveyData(uint256)":{"details":"It represents the current survey state.","returns":{"_0":"SurveyData The survey's data."}},"surveyParams(uint256)":{"details":"This represents the parameter of the survey defined by the organizer.","returns":{"_0":"SurveyParams The survey parameter."}}},"version":1},"userdoc":{"kind":"user","methods":{"createSurvey((string,uint8,bool,bytes32,uint256,uint256,uint8[],(uint8,bytes)[][]))":{"notice":"Create a new survey."},"hasVoted(uint256,address)":{"notice":"Indicates if a user has submitted an entry for a given survey."},"revealResults(uint256)":{"notice":"Reveal the survey result."},"submitEntry(uint256,bytes32,bytes32[],bytes)":{"notice":"Submit a new entry for a polling/benchmark survey."},"submitWhitelistedEntry(uint256,bytes32,bytes32[],bytes,bytes32[])":{"notice":"Submit a new entry for a whitelisted polling/benchmark survey."},"surveyData(uint256)":{"notice":"Returns the survey's data."},"surveyParams(uint256)":{"notice":"Returns the survey's parameter."}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","fhevm-contracts/=node_modules/fhevm-contracts/","fhevm-core-contracts/=node_modules/fhevm-core-contracts/","fhevm/=node_modules/fhevm/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/ISurvey.sol":"ISurvey"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"contracts/interfaces/IFilters.sol":{"keccak256":"0x00d7159267574701b0eb6e61f97fbff2ce60650ba67d4d801f8e2303d99ac39e","urls":["bzz-raw://c0597fd5d67833f95d312641ae970465e1ba4d05c7373047cb719637e592f76a","dweb:/ipfs/QmUzDBv8L4GooFzj9dMdHxNUT9DBEn69MELgMGFhMfwzCA"],"license":"BSD-3-Clause-Clear"},"contracts/interfaces/ISurvey.sol":{"keccak256":"0xd4ba043feb66e28d5fe8eed2f957651cca2d068fe5ce79f5b0a75b6ca122297f","urls":["bzz-raw://a02911369c8a0fde02a4457a003c6686864759e3c6c43034601af4801ee1526f","dweb:/ipfs/QmUE1Mof9PN3JrZzYrHYeYpgJHLzWswd9cGcyajeFsKXBj"],"license":"BSD-3-Clause-Clear"},"node_modules/fhevm/gateway/GatewayCaller.sol":{"keccak256":"0xd19fd7715f0c5b479bf0cd8e3108cc8da7deae2d4fc7fb5ab089ebf2d76a0652","urls":["bzz-raw://6386c509464cefe5a41903ca837da46a21b8042d13ccde656158efc48cd70ea8","dweb:/ipfs/QmUn7C6aZwKmEmKsphBshBezXXGZtLMyfaeZAyuZoRsBWU"],"license":"BSD-3-Clause-Clear"},"node_modules/fhevm/gateway/lib/Gateway.sol":{"keccak256":"0x9585a649e3001a4b8768ab6e2597b416f680bcc537309cd50b60e023e9791318","urls":["bzz-raw://a1b055bfb067cc247d4bd60b5f8348f667cbe79717a5753cd6412955277345d0","dweb:/ipfs/QmTveBaQg9GUdtrrxcR4RsiyAEmoEKGL4gn6E1gThR1ph5"],"license":"BSD-3-Clause-Clear"},"node_modules/fhevm/lib/Impl.sol":{"keccak256":"0x89d4968cd956a8931f1a8a177b3bef1c6cf88a03665083db74430add50b88f21","urls":["bzz-raw://aaaef2c82d56dacfb08946842ea1ce26757d13f3251de62fa79222232dfcb43c","dweb:/ipfs/QmQ6QZPxJw9jb3qjRYCX7pMQVoYogjTsYgmdEnB3EnwFRy"],"license":"BSD-3-Clause-Clear"},"node_modules/fhevm/lib/TFHE.sol":{"keccak256":"0x221799c8332f83ab65a0b71746409f0c2c89f1cd8d9ba4091d967c667e1df734","urls":["bzz-raw://2dba387fbc612a2ee64063b0ee6c27304b3944423d11045acc50abd84577fb5f","dweb:/ipfs/QmThptDGnpd8PuncFk1rnQoCzEqwUED622yC9xZgFhwY59"],"license":"BSD-3-Clause-Clear"}},"version":1},"id":3}